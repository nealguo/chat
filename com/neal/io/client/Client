package com.neal.io.client;

import java.net.InetSocketAddress;
import java.util.concurrent.TimeUnit;

import org.apache.mina.core.future.ConnectFuture;
import org.apache.mina.filter.codec.ProtocolCodecFilter;
import org.apache.mina.filter.codec.textline.TextLineCodecFactory;
import org.apache.mina.transport.socket.SocketConnector;
import org.apache.mina.transport.socket.nio.NioSocketConnector;

// http://benx.iteye.com/blog/1022098
public class Client {

	private SocketConnector connector;
	private static final int CONNECT_TIMEOUT = 5000;
	private static final String HOST = "localhost";
	private static final int PORT = 8080;

	public Client() {
		init();
	}

	private void init() {
		connector = new NioSocketConnector();

		// long connection
		// connector.getSessionConfig().setKeepAlive(true);

		connector.getFilterChain().addLast("codec",
				new ProtocolCodecFilter(new TextLineCodecFactory()));
		connector.setHandler(new ClientHandler());
	}

	private ConnectFuture getConnectFuture() {
		InetSocketAddress address = new InetSocketAddress(HOST, PORT);
		ConnectFuture connectFuture = connector.connect(address);
		connectFuture.awaitUninterruptibly(CONNECT_TIMEOUT,
				TimeUnit.MILLISECONDS);
		return connectFuture;
	}
	
	public SocketConnector getConnector() {
		return connector;
	}

	public void sendMessage(final String msg) {
		ConnectFuture connectFuture = getConnectFuture();
		connectFuture.getSession().write(msg);
	}

	public static void main(String[] args) {
		Client client = new Client();
		client.sendMessage("hello world.");
		client.getConnector().dispose();
	}

}
